<?xml version="1.0" encoding="utf-8"?>
<parametricbox version="2.0">
  <info>
    <title>Box-O-Rama</title>
    <id>magicbox.empty</id>
    <author>Tal Erez</author>
    <website>http://magic-box.org/</website>
    <tutorial/>
    <description>A default design</description>
  </info>
  <variables>
    <variable name="pf_item_width" type="slider" min="0" max="100" value="17.91044776119403" showSettings="false"/>
    <variable name="pf_item_height" type="slider" min="0" max="100" value="7.228915662650602" showSettings="false"/>
    <variable name="cnc_t" type="slider" min="0" max="10" value="1.3253012048192772" showSettings="true" description="thickness of the cnc bit"/>
    <variable name="cnc_indent" type="slider" min="0" max="100" value="2.4096385542168677" showSettings="true" description="indentation of the cnc bit"/>
  </variables>
  <layers>
    <path id="dogbone_defs" stroke="#DDDDDD" stroke-width="1" stroke-opacity="1" fill="#888888" fill-opacity="0.5" visibility="visible" d="" mb_x="0" mb_y="0" mb_d="# horizontal cnc dogbone function&#xA;define h_dogbone ( width, hdir, vdir, thickness, indent )&#xA;[&#xA;&#xA; # calculate the relative movement along the x and y axis&#xA; set cnc_t_move (sin(45)*thickness)&#xA; set cnc_i_move (sin(45)*indent)&#xA;&#xA; # right side has dogbone&#xA; if( hdir > 0 )[&#xA;  h width-cnc_t_move&#xA;  l cnc_i_move -cnc_i_move*vdir&#xA;  l cnc_t_move/2 cnc_t_move/2*vdir&#xA; ] &#xA; # left side has dogbone&#xA; if( hdir &lt; 0 )[&#xA;  l cnc_t_move/2 -cnc_t_move/2*vdir&#xA;  l cnc_i_move cnc_i_move*vdir&#xA;  h width-cnc_t_move&#xA; ]&#xA; # both sides have dogbones&#xA; if( hdir == 0 )[&#xA;  l cnc_t_move/2 -cnc_t_move/2*vdir&#xA;  l cnc_i_move cnc_i_move*vdir&#xA;  h width-cnc_t_move*2&#xA;  l cnc_i_move -cnc_i_move*vdir&#xA;  l cnc_t_move/2 cnc_t_move/2*vdir&#xA; ]&#xA;]&#xA;&#xA;# vertical dogbone function&#xA;define v_dogbone ( height, vdir, hdir, thickness, indent )&#xA;[&#xA;&#xA; # calculate the relative movement along the x and y axis&#xA; set cnc_t_move (sin(45)*thickness)&#xA; set cnc_i_move (sin(45)*indent)&#xA;&#xA; # bottom side has dogbone&#xA; if( vdir > 0 )[&#xA;  v height-cnc_t_move&#xA;  l cnc_i_move cnc_i_move*hdir&#xA;  l -cnc_t_move/2 cnc_t_move/2*hdir&#xA; ] &#xA; # top side has dogbone&#xA; if( vdir &lt; 0 )[&#xA;  l cnc_t_move/2 cnc_t_move/2*hdir&#xA;  l -cnc_i_move cnc_i_move*hdir&#xA;  v height-cnc_t_move&#xA; ]&#xA; # both sides have dogbones&#xA; if( vdir == 0 )[&#xA;  l cnc_t_move/2 cnc_t_move/2*hdir&#xA;  l -cnc_i_move cnc_i_move*hdir&#xA;  v height-cnc_t_move*2&#xA;  l cnc_i_move cnc_i_move*hdir&#xA;  l -cnc_t_move/2 cnc_t_move/2*hdir&#xA; ]&#xA;]" mb_stroke="#DDDDDD" mb_strokeWidth="0" mb_strokeOpacity="1" mb_fill="#888888" mb_fillOpacity="0.5" mb_visibility="visible" mb__showStroke="true" mb__showFill="false" mb__showTransform="false">
      <transforms/>
    </path>
    <path id="pressfit_defs" stroke="#DDDDDD" stroke-width="1" stroke-opacity="1" fill="#888888" fill-opacity="0.5" visibility="visible" d="" mb_x="0" mb_y="0" mb_d="set pf_v&#xA;{{15,30,15},&#xA;{12,30,36,30,12},&#xA;{12,30,12,30,32,30,12,30,12},&#xA;{12,30,12,30,30,30,12,30,30,30,12,30,12},{12,30,40,30,12,30,40,30,12,30,40,30,12,30,40,30,12}, {18,30,43.2,30,12,30,43.2,30,12,30,43.2,30,12,30,43.2,30,12,30,43.2,30,18}&#xA;}&#xA;&#xA;set pf_widths {84,144,224,324,484,666}&#xA;&#xA;&#xA;set pf_h {18,40,30,12,30,40,30,12,30,40,18}&#xA;&#xA;# total: 400&#xA;set pf_d&#xA;{33,18,45,50,45,18,45,50,45,18,33}&#xA;&#xA;define pfh (list, scalingx, scalingy,xdir, ydir)[&#xA;# display horizontal press-fit&#xA;# with cnc dogbone&#xA;&#xA;  set i 0&#xA;  each list [&#xA;    if( i % 2 == 0) [&#xA;      if( i != 0 ) [&#xA;        v -thickness*scalingy*ydir&#xA;        &#xA;      ]&#xA;    ] else [&#xA;      v thickness*scalingy*ydir&#xA;    ]&#xA;&#xA;    # check if it's the top or bottom one&#xA;    if( i % 2 == 1) [&#xA;      h $*scalingx*xdir&#xA;    ] else [&#xA;      h $*scalingx*xdir&#xA;    ]&#xA;    set i i+1&#xA;  ]&#xA;&#xA;&#xA;]&#xA;&#xA;define pfv (list, scalingx, scalingy, xdir, ydir)[&#xA;&#xA;&#xA;# display vertical press-fit&#xA;set i 0&#xA;&#xA;&#xA;each list [&#xA;  if( i % 2 == 0) [&#xA;    if( i != 0 ) [ # first element&#xA;      h_dogbone thickness*scalingx*xdir 1 -1 cnc_t*xdir cnc_indent*xdir&#xA;    ]&#xA;  ] else [&#xA;     h_dogbone -thickness*scalingx*xdir -1 -1 -cnc_t*xdir -cnc_indent*xdir&#xA;  ]&#xA;&#xA;# check if it's the left or right one&#xA;    if( i % 2 == 0 &amp;&amp; i != list.length-1) [&#xA;    # all even elements&#xA;     if( i == 0 )[ v_dogbone $*ydir*scalingy 1 -1 -cnc_t*ydir -cnc_indent*ydir ] # first item&#xA;     else [ v_dogbone $*ydir*scalingy 0 -1 -cnc_t*ydir -cnc_indent*ydir ]&#xA;      &#xA;      #v $*scalingy*ydir&#xA;    ] else [&#xA;     if( i == list.length-1)[ # last item&#xA;      v_dogbone $*ydir*scalingy -1 -1 -cnc_t*ydir -cnc_indent*ydir&#xA;     ] else [&#xA;      # all odd elements&#xA;      v $*scalingy*ydir&#xA;     ]&#xA;    ]&#xA;  #&#xA;  set i i+1&#xA;]&#xA;&#xA;]" mb_stroke="#DDDDDD" mb_strokeWidth="1" mb_strokeOpacity="1" mb_fill="#888888" mb_fillOpacity="0.5" mb_visibility="visible" mb__showStroke="true" mb__showFill="false" mb__showTransform="false">
      <transforms/>
    </path>
    <path id="dogbone" stroke="#DDDDDD" stroke-width="1" stroke-opacity="1" fill="#888888" fill-opacity="0.5" visibility="visible" d="" mb_x="0" mb_y="0" mb_d="M 40 40&#xA;&#xA;set xdir 1&#xA;set ydir -1&#xA;&#xA;# simulate a horizontal press-fit&#xA;h          pf_item_width&#xA;v_dogbone -ydir*pf_item_height  1 ydir -cnc_t -cnc_indent&#xA;h_dogbone  pf_item_width        0 ydir  cnc_t  cnc_indent&#xA;v_dogbone  ydir*pf_item_height -1 ydir  cnc_t  cnc_indent&#xA;&#xA;h          pf_item_width&#xA;v_dogbone -ydir*pf_item_height  1 ydir -cnc_t -cnc_indent&#xA;h_dogbone  pf_item_width        0 ydir  cnc_t  cnc_indent&#xA;v_dogbone  ydir*pf_item_height -1 ydir  cnc_t  cnc_indent&#xA;&#xA;h          pf_item_width&#xA;&#xA;# simulate a vertical press-fit&#xA;v          pf_item_width&#xA;h_dogbone  pf_item_height  1  1  cnc_t  cnc_indent&#xA;v_dogbone  pf_item_width   0  1  cnc_t  cnc_indent&#xA;h_dogbone -pf_item_height -1  1 -cnc_t -cnc_indent&#xA;&#xA;v          pf_item_width&#xA;h_dogbone  pf_item_height  1  1  cnc_t  cnc_indent&#xA;v_dogbone  pf_item_width   0  1  cnc_t  cnc_indent&#xA;h_dogbone -pf_item_height -1  1 -cnc_t -cnc_indent&#xA;&#xA;v          pf_item_width&#xA;&#xA;# simulate a horizontal press-fit (backwards)&#xA;h          -pf_item_width&#xA;v_dogbone   pf_item_height  1 1   cnc_t  cnc_indent&#xA;h_dogbone  -pf_item_width   0 1  -cnc_t -cnc_indent&#xA;v_dogbone  -pf_item_height -1 1  -cnc_t -cnc_indent&#xA;&#xA;h          -pf_item_width&#xA;v_dogbone   pf_item_height  1 1   cnc_t  cnc_indent&#xA;h_dogbone  -pf_item_width   0 1  -cnc_t -cnc_indent&#xA;v_dogbone  -pf_item_height -1 1  -cnc_t -cnc_indent&#xA;h          -pf_item_width&#xA;&#xA;&#xA;# simulate a vertical press-fit (reversed)&#xA;v         -pf_item_width&#xA;h_dogbone -pf_item_height  1  1 -cnc_t -cnc_indent&#xA;v_dogbone -pf_item_width   0  1 -cnc_t -cnc_indent&#xA;h_dogbone  pf_item_height -1  1  cnc_t  cnc_indent&#xA;&#xA;v         -pf_item_width&#xA;h_dogbone -pf_item_height  1  1 -cnc_t -cnc_indent&#xA;v_dogbone -pf_item_width   0  1 -cnc_t -cnc_indent&#xA;h_dogbone  pf_item_height -1  1  cnc_t  cnc_indent&#xA;&#xA;v         -pf_item_width&#xA;&#xA;#l cnc_t_move/2 cnc_t_move/2&#xA;#l -cnc_i_move cnc_i_move&#xA;#v pf_item_height-cnc_t_move&#xA;&#xA;" mb_stroke="#DDDDDD" mb_strokeWidth="0" mb_strokeOpacity="0.6739130434782609" mb_fill="#888888" mb_fillOpacity="0.5" mb_visibility="visible" mb__showStroke="true" mb__showFill="false" mb__showTransform="false">
      <transforms/>
    </path>
    <path id="pessfit" stroke="#DDDDDD" stroke-width="1" stroke-opacity="1" fill="#888888" fill-opacity="0.5" visibility="visible" d="" mb_x="0" mb_y="0" mb_d="" mb_stroke="#DDDDDD" mb_strokeWidth="1" mb_strokeOpacity="1" mb_fill="#888888" mb_fillOpacity="0.5" mb_visibility="visible" mb__showStroke="true" mb__showFill="false" mb__showTransform="false">
      <transforms/>
    </path>
  </layers>
</parametricbox>